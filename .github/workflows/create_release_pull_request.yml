name: create release pull request

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create-release-branch:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      # get version step
      - name: Set Release version env variable
        id: set-version
        run: echo "::set-output name=RELEASE_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      # create new branch step
      - name: Create release branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: release/${{ steps.set-version.outputs.RELEASE_VERSION }}
  # create-release-pr:
  #   needs: create-release-branch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
      # create release PR step
      - name: Create Release Pull Request
        uses: bakunyo/git-pr-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: release/${{ steps.set-version.outputs.RELEASE_VERSION }}
          GIT_PR_RELEASE_BRANCH_STAGING: main
          GIT_PR_RELEASE_LABELS: release
          RELEASE_VERSION: v${{ steps.set-version.outputs.RELEASE_VERSION }}
          GIT_PR_RELEASE_TEMPLATE: .github/.git-pr-release-template
